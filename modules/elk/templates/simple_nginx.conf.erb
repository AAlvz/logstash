input {
  file {
    path => "<%= @log_path %>"
    start_position => beginning
    sincedb_path => "/dev/null"
  }
}

filter {
  if [path] =~ "acces_nginx" {
    # mutate {
    #   replace => { "type" => "filter1_easylist" }
    # }
    if [path] =~ "notification" {
      mutate {
        replace => { "type" => "notification1_notification" }
      }
    }

    grok {
      patterns_dir => "/opt/logstash/patterns/host-adblockplus"
      match => {"message" => '%{NGINXACCESS}'}
    }

    grok {
      match => {"request" => '%{URIPATH:resource}'}
    }

    mutate {
      split  => ["[lang]", ","]
      add_field => ["lang_real", "%{[lang][0]}"]
      add_field => ["ip_agent", "%{clientip}%{agent}"]
    }

    useragent {
      source => "[agent]"
    }

    kv {
      source => "[request]"
      field_split => "&?"
    }

    geoip {
      source => "[clientip]"
    }

    date {
      match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
  }

}

output {
  #stdout { codec => rubydebug }
  if "_grokparsefailure" in [tags] {
    stdout { codec => rubydebug }
    # file {
    #   path => "/home/<%= @user %>/logstash/error_logs/output_tcp_failed"
    #   codec => line
    # }
  } else {
    stdout { codec => dots }
    elasticsearch {
      host => localhost
      protocol => "http"
    }
  }
}

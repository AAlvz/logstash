input {
  file {
    path => "/vagrant/logs/filter1.easylist"
    start_position => beginning
    sincedb_path => "/dev/null"
  }

  file {
    path => "/vagrant/logs/notification1.notification"
    start_position => beginning
    sincedb_path => "/dev/null"
  }
}

filter {
  if [path] =~ "filter" {
    mutate {
      replace => { "type" => "filter1_easylist" }
    }
  } else if [path] =~ "notification" {
    mutate {
      replace => { "type" => "notification1_notification" }
    }
  }
    grok {
      patterns_dir => "/vagrant/patterns_logstash"
      match => {"message" => '%{NGINXACCESS}'}
    }

    grok {
      match => {"request" => '%{URIPATH:resource}'}
    }

    mutate {
      split  => ["[lang]", ","]
      add_field => ["lang_real", "%{[lang][0]}"]
    }

    useragent {
      source => "[agent]"
    }

    kv {
      source => "[request]"
      field_split => "&?"
    }

    geoip {
      source => "[clientip]"
    }

    date {
      match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }

}

output {
  stdout { codec => rubydebug }
  if "_grokparsefailure" in [tags] {
    #stdout { codec => rubydebug }
    file {
      path => "/vagrant/error_logs/output_tcp_failed"
      codec => line
    }
  } else {
    #stdout { codec => dots }
    # elasticsearch {
    #   host => localhost
    #   protocol => "http"
    # }
  }
}

input {
  file {
    path => "/tmp/apache_logs"
    start_position => beginning
    sincedb_path => "/dev/null"
  }
}

filter {
  if [path] =~ "apache" {
    mutate {
      replace => { "type" => "apache_access" }
    }
    grok {
      patterns_dir => "/vagrant/logstash_patterns"
      #match => {"message" => '%{COMBINEDAPACHELOG} "-" (?<tag>https?) %{QS:lang} "%{HOSTABP:hostabp}" %{QS:abpV}'}
      match => {"message" => '%{NGINXACCESS}'}
    }
    mutate {
      split  => ["[lang]", ","]
      add_field => ["lang_real", "%{[lang][0]}"]

      # This works only with LS > 1.5
      #split => ["[request]", "?"]
      #split => ["[request][&]", "&"]
    }

    grok {
      match => {"request" => '%{URIPATHPARAM:uripathparam}'}
    }

    useragent {
      source => "[agent]"
    }

  }
  date {
    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
  }
}

output {
  stdout { codec => rubydebug }
  if "_grokparsefailure" in [tags] {
    stdout { codec => rubydebug }
    file {
      path => "/vagrant/error_logs/output_tcp_failed"
    }
  } else {
    stdout { codec => rubydebug }
  }
}

input {
  file {
    path => "/vagrant/logs/recentmillionlines"
    start_position => beginning
    sincedb_path => "/dev/null"
  }
}

filter {
  if [path] =~ "million" {
    mutate {
      replace => { "type" => "test_access" }
    }
    grok {
      patterns_dir => "/vagrant/logstash_patterns"
      match => {"message" => '%{NGINXACCESS}'}
    }

    grok {
      match => {"request" => '%{URIPATH:resource}'}
    }

    mutate {
      split  => ["[lang]", ","]
      add_field => ["lang_real", "%{[lang][0]}"]
    }

    useragent {
      source => "[agent]"
    }

    kv {
      source => "[request]"
      field_split => "&?"
    }

    geoip {
      source => "[clientip]"
    }

  }
  date {
    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
  }
}

output {
  #stdout { codec => rubydebug }
  if "_grokparsefailure" in [tags] {
    stdout { codec => rubydebug }
    file {
      path => "/vagrant/error_logs/output_tcp_failed"
    }
  } else {
    stdout { codec => rubydebug }
    # elasticsearch_http {
    #   host => localhost
    # }
  }
}
